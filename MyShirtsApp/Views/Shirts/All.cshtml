@model AllShirtsQueryModel

@{
    ViewData["Title"] = "All shirts";
    ViewBag.IsFavorites = false;
    ViewBag.ShowHearts = true;

    var previous = "<<";
    var next = ">>";

    if (User.Identity.IsAuthenticated)
    {
        if (User.IsAdmin())
        {
            ViewBag.ShowHearts = false;
        }
    }

    var perPage = string.Empty;

    int.TryParse(@Model.ShirtsPerPage.ToString(), out int result);

    if (result == 0)
    {
        perPage = "all";
    }
}

<div class="row mb-3">
    <div class="col-4 offset-sm-3 col-sm-2 text-center">
        <label asp-for="Size" class="form-label"></label>
        <select asp-for="Size" class="form-select" onchange="callChangeSize(this.value)">
            <option value="">All</option>
            <option value="1">XS</option>
            <option value="2">S</option>
            <option value="3">M</option>
            <option value="4">L</option>
            <option value="5">XL</option>
            <option value="6">XXL</option>
        </select>
    </div>
    <div class="col-4 col-sm-2 text-center">
        <label asp-for="Sorting" class="form-label"></label>
        <select asp-for="Sorting" class="form-select" onchange="callChangeOrder(this.value)">
            <option value="0">Newest</option>
            <option value="1">Oldest</option>
            <option value="2">Price ascending</option>
            <option value="3">Price descending</option>
        </select>
    </div>
    <div class="col-4 col-sm-2 text-center">
        <label asp-for="ShirtsPerPage" class="form-label"></label>
        <select asp-for="ShirtsPerPage" class="form-select" onchange="callChangePagination(this.value)">
            <option value="3">3</option>
            <option value="6">6</option>
            <option value="9">9</option>
            <option value="0">No pages</option>
        </select>
    </div>
</div>

@{
    var previousPage = Model.CurrentPage - 1;

    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalShirts / @Model.ShirtsPerPage);
}

@if (maxPage != 1 && !double.IsInfinity(maxPage) && Model.Shirts.Any())
{
    <div class="row mb-4">
        <div class="col-6">
            <a class="btn bgcolor-blue float-left text-white@(Model.CurrentPage == 1 ? " disabled" : string.Empty)"
           asp-controller="Shirts"
           asp-action="All"
           asp-route-currentPage="@(previousPage)"
           asp-route-size="@Model.Size"
           asp-route-sorting="@((int)Model.Sorting)"
           asp-route-shirtsPerPage=@Model.ShirtsPerPage>@previous</a>
        </div>

        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage || maxPage == 0 ||
            !Model.Shirts.Any() || @Model.ShirtsPerPage == 0 || maxPage == double.PositiveInfinity;
        }

        <div class="col-6">
            <a class="btn bgcolor-blue float-end text-white@(shouldButtonBeDisabled ? " disabled" : string.Empty)"
           asp-controller="Shirts"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-size="@Model.Size"
           asp-route-sorting="@((int)Model.Sorting)"
           asp-route-shirtsPerPage=@Model.ShirtsPerPage>@next</a>
        </div>
    </div>
}
<partial name="_ShirtsPartial" model="@Model.Shirts" />

@if (!Model.Shirts.Any())
{
    <h2 class="text-center">There are not available shirts with this criteria!</h2>
}

@section Scripts{
    <script>
        function callChangeSize(size){
            window.location.href = `/Shirts/All?currentPage=1&size=${size}&sorting=@((int)Model.Sorting)&shirtsPerPage=@(Model.ShirtsPerPage == int.MaxValue ? 0 : Model.ShirtsPerPage)`;
        }

        function callChangeOrder(sorting){
            window.location.href = `/Shirts/All?currentPage=1&size=@Model.Size&sorting=${sorting}&shirtsPerPage=@(Model.ShirtsPerPage == int.MaxValue ? 0 : Model.ShirtsPerPage)`;
        }

        function callChangePagination(shirtsPerPage){
            window.location.href = `/Shirts/All?currentPage=1&size=@Model.Size&sorting=@((int)Model.Sorting)&shirtsPerPage=${shirtsPerPage}`;
        }

        function checkAuthentication(event){
            @if (!User.Identity.IsAuthenticated)
            {
                <text>
                    let url = "/Identity/Account/Login?ReturnUrl=@(Context.Request.Path.ToString() + Context.Request.QueryString.Value.Replace("&", "%26"))";
                    window.location.href = url;
                </text>
            }
            else
            {
                <text>
                    addOrRemoveFromFavorites(event, @ViewBag.IsFavorites.ToString().ToLower());
                </text>
            }
        };
    </script>
}